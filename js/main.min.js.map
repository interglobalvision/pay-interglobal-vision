{"version":3,"sources":["main.js"],"names":["Site","mobileThreshold","init","_this","this","Stripe","$","window","resize","onResize","fixWidows","each","string","html","replace","$form","setPublishableKey","createToken","submit","event","removeClass","find","prop","card","stripeResponseHandler","bind","status","response","error","addClass","message","token","id","append","val","values","JSON","stringify","serializeArray","request","ajax","url","method","data","form","done","msg","responseClass","responseMessage","parsedData","parse","e","fail","jqXHR","textStatus","jQuery","document","ready"],"mappings":"AAGAA,MACEC,gBAAiB,IACjBC,KAAM,WACJ,GAAIC,GAAQC,IAEZD,GAAME,OAAOH,OAEbI,EAAEC,QAAQC,OAAO,WACfL,EAAMM,cAKVA,SAAU,aAKVC,UAAW,WAETJ,EAAE,kBAAkBK,KAAK,WACvB,GAAIC,GAASN,EAAEF,MAAMS,MACrBD,GAASA,EAAOE,QAAQ,YAAY,YACpCR,EAAEF,MAAMS,KAAKD,OAKnBZ,KAAKK,QACHU,MAAOT,EAAE,iBACTJ,KAAM,WACJ,GAAIC,GAAQC,IAUZC,QAAOW,kBAAkB,oCAEzBb,EAAMc,eAGRA,YAAa,WACX,GAAId,GAAQC,IAEZD,GAAMY,MAAMG,OAAO,SAASC,GAY1B,MATAb,GAAE,qBAAqBc,YAAY,0BAA0BP,KAAK,UAGlEV,EAAMY,MAAMM,KAAK,WAAWC,KAAK,YAAY,GAG7CjB,OAAOkB,KAAKN,YAAYd,EAAMY,MAAOZ,EAAMqB,sBAAsBC,KAAKtB,KAG/D,KAIXqB,sBAAuB,SAASE,EAAQC,GACtC,GAAIxB,GAAQC,IAEZ,IAAIuB,EAASC,MAGXtB,EAAE,qBAAqBuB,SAAS,iBAAiBhB,KAAKc,EAASC,MAAME,SACrE3B,EAAMY,MAAMM,KAAK,WAAWC,KAAK,YAAY,OAExC,CAGL,GAAIS,GAAQJ,EAASK,EAGrB7B,GAAMY,MAAMkB,OAAO3B,EAAE,4CAA4C4B,IAAIH,GAErE,IAAII,GAASC,KAAKC,UAAUlC,EAAMY,MAAMuB,kBAEpCC,EAAUjC,EAAEkC,MACdC,IAAK,aACLC,OAAQ,OACRC,MAAOC,KAAMT,IAGfI,GAAQM,KAAK,SAAUC,GACrB3C,EAAMY,MAAMM,KAAK,8BAA8Ba,IAAI,IACnD/B,EAAMY,MAAMM,KAAK,WAAWC,KAAK,YAAY,EAE7C,IAAIyB,EAGJ,IAAW,cAAPD,EACFC,EAAgB,aAChBC,gBAAkB,mDACb,IAAW,iBAAPF,EACTC,EAAgB,aAChBC,gBAAkB,yHAGlB,KACE,GAAIC,GAAab,KAAKc,MAAMJ,EAC5BC,GAAgB,WAChBC,gBAAkBC,EAAWnB,QAC7B,MAAOqB,GACPJ,EAAgB,WAChBC,gBAAkBF,EAItBxC,EAAE,qBAAqBuB,SAAS,QAAUkB,GAAelC,KAAKmC,mBAGhET,EAAQa,KAAK,SAAUC,EAAOC,GAC5BnD,EAAMY,MAAMM,KAAK,WAAWC,KAAK,YAAY,GAC7ChB,EAAE,qBAAqBuB,SAAS,iBAAiBhB,KAAKyC,EAAa,4BAM3EC,OAAOC,UAAUC,MAAM,WACrB,YAEAzD,MAAKE","file":"main.min.js","sourcesContent":["/* jshint browser: true, devel: true, indent: 2, curly: true, eqeqeq: true, futurehostile: true, latedef: true, undef: true, unused: true */\n/* global jQuery, $, document, Site, Modernizr */\n\nSite = {\n  mobileThreshold: 601,\n  init: function() {\n    var _this = this;\n\n    _this.Stripe.init();\n\n    $(window).resize(function(){\n      _this.onResize();\n    });\n\n  },\n\n  onResize: function() {\n    var _this = this;\n\n  },\n\n  fixWidows: function() {\n    // utility class mainly for use on headines to avoid widows [single words on a new line]\n    $('.js-fix-widows').each(function(){\n      var string = $(this).html();\n      string = string.replace(/ ([^ ]*)$/,'&nbsp;$1');\n      $(this).html(string);\n    });\n  },\n};\n\nSite.Stripe = {\n  $form: $('#payment-form'),\n  init: function() {\n    var _this = this;\n\n    // Stripe public keys\n    //\n    // Test:\n    // pk_test_QJv0NVjinlteY6ji0HOrah9n\n    //\n    // Live: \n    // pk_live_1iLay9wxJyeywHOFX4Q9kMtl\n\n    Stripe.setPublishableKey('pk_test_QJv0NVjinlteY6ji0HOrah9n');\n\n    _this.createToken();\n  },\n\n  createToken: function() {\n    var _this = this;\n\n    _this.$form.submit(function(event) {\n\n      // Clear response\n      $('#payment-response').removeClass('show approved declined').html('&nbsp;');\n      \n      // Disable the submit button to prevent repeated clicks:\n      _this.$form.find('.submit').prop('disabled', true);\n\n      // Request a token from Stripe:\n      Stripe.card.createToken(_this.$form, _this.stripeResponseHandler.bind(_this));\n\n      // Prevent the form from being submitted:\n      return false;\n    });\n  },\n\n  stripeResponseHandler: function(status, response) {\n    var _this = this;\n\n    if (response.error) { // Problem!\n\n      // Show the errors on the form:\n      $('#payment-response').addClass('show declined').html(response.error.message);\n      _this.$form.find('.submit').prop('disabled', false); // Re-enable submission\n\n    } else { // Token was created!\n\n      // Get the token ID:\n      var token = response.id;\n\n      // Insert the token ID into the form so it gets submitted to the server:\n      _this.$form.append($('<input type=\"hidden\" name=\"stripeToken\">').val(token));\n\n      var values = JSON.stringify(_this.$form.serializeArray());\n\n      var request = $.ajax({\n        url: \"charge.php\",\n        method: \"POST\",\n        data: {form: values}\n      });\n       \n      request.done(function( msg ) {\n        _this.$form.find('input[type=text], textarea').val(''); // Clear form values\n        _this.$form.find('.submit').prop('disabled', false); // Re-enable submission\n\n        var responseClass,\n          responseMsg;\n\n        if (msg == 'authorized') {\n          responseClass = 'authorized';\n          responseMessage = 'Your payment has been authorized. Thank you.';\n        } else if (msg == 'manual_review') {\n          responseClass = 'authorized';\n          responseMessage = 'Your payment is in review. We will contact you at the provided email if any further action is required. Thank you.';\n        } else {\n          // Stripe error caught\n          try {\n            var parsedData = JSON.parse(msg);\n            responseClass = 'declined';\n            responseMessage = parsedData.message;\n          } catch (e) {\n            responseClass = 'declined';\n            responseMessage = msg;\n          }\n        }\n\n        $('#payment-response').addClass('show ' + responseClass).html(responseMessage);\n      });\n       \n      request.fail(function( jqXHR, textStatus ) {\n        _this.$form.find('.submit').prop('disabled', false);\n        $('#payment-response').addClass('show declined').html(textStatus + '. Please try again.');\n      });\n    }\n  },\n};\n\njQuery(document).ready(function () {\n  'use strict';\n\n  Site.init();\n\n});"],"sourceRoot":"/source/"}